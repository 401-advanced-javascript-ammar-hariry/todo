{"version":3,"sources":["hooks/custom-form.js","components/todo/form.js","context/auth-context.js","show/show.js","components/auth.js","context/pagination.js","components/todo/list.js","components/todo/todo.js","components/login.js","components/signup.js","app.js","index.js"],"names":["apiUrl","useForm","callback","useState","toDoData","setToDoData","handleGet","axios","get","then","res","Object","assign","oneMore","data","post","item","assignee","difficulty","complete","console","log","_id","delete","put","TodoForm","props","emptyCall","habdlePost","_handleSubmit","e","a","preventDefault","target","text","value","postObj","setTimeout","window","location","reload","Form","onSubmit","Group","controlId","Label","Control","type","name","placeholder","defaultValue","min","max","Button","variant","style","width","API","process","REACT_APP_API","LoginContext","React","createContext","LoginProvider","login","username","password","fetch","method","mode","cache","headers","Headers","btoa","results","json","validateToken","token","alert","signup","body","requestOptions","credentials","redirect","referrerPolicy","JSON","stringify","logout","setLoginState","user","jwt","verify","REACT_APP_SECRET","ex","loggedIn","cookie","save","setState","state","load","this","Provider","children","Component","Show","condition","Auth","okToRender","context","capability","capabilities","includes","warn","contextType","SettingsContext","SettingsProvider","arr","itemsPerPage","setItemsPerPage","changePageNumber","show","setShow","TodoList","siteContext","useContext","btnIdx","setBtnIdx","pgNumber","newArr","list","filter","element","btns","Math","floor","length","Array","fill","handelPages","sort","b","val","slice","map","idx","status","Toast","key","ToastHeader","closeButton","className","onClick","updateStatus","handleDelete","Body","btnHandler","once","ToDo","temp","habdleDelete","handelUpdate","keys","push","setList","count","setCount","useEffect","document","title","Container","Navbar","bg","marginTop","Brand","handleSubmit","items","random","id","Login","handleChange","onChange","Signup","signUpSubmit","Password","role","email","Row","as","App","Main","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.97fec0d9.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst apiUrl = 'https://api401-todo.herokuapp.com/todo';\n\nconst useForm = (callback) => {\n    const [toDoData, setToDoData] = useState({});\n\n    const handleGet = () => {\n        axios.get(apiUrl)\n            .then(res => {\n                let tempData = Object.assign({}, toDoData);\n                tempData = {};\n                setToDoData(tempData);\n\n                let oneMore = Object.assign({}, toDoData);\n\n                Object.assign(oneMore, ...[res.data]);\n\n                setToDoData(oneMore);\n            });\n    }\n    const habdlePost = (data) => {\n        axios.post(apiUrl, {\n                item: data.item,\n                assignee: data.assignee,\n                difficulty: data.difficulty,\n                complete: data.complete,\n            })\n            .then(res => {\n                console.log(res);\n                console.log(res.data);\n\n            });\n    }\n    const handelUpdate = (data, _id) => {\n        axios.put(`${apiUrl}/${_id}`, {\n                item: data.item,\n                assignee: data.assignee,\n                difficulty: data.difficulty,\n                complete: data.complete,\n            })\n            .then(res => {\n                console.log(res);\n                console.log(res.data);\n\n            });\n        handleGet();\n    }\n    const habdleDelete = (_id) => {\n\n        axios.delete(`${apiUrl}/${_id}`)\n            .then(res => {\n                console.log(res);\n                console.log(res.data);\n            })\n        handleGet();\n    }\n    return [toDoData, handleGet, habdlePost, habdleDelete, handelUpdate];\n}\n\nexport default useForm;","import React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport useForm from '../../hooks/custom-form'\n\nfunction TodoForm(props) {\n\n  let emptyCall ;\n  const [toDoData, handleGet, habdlePost] = useForm(emptyCall);\n\n  const _handleInputChange = (e) => {\n//     setItem({ ...item, [e.target.name]: e.target.value });\n  }\n\n  const _handleSubmit = async (e) => {\n\t  e.preventDefault();\t\n\t  let item = e.target.text.value;\n\t  let assignee = e.target.assignee.value;\n\t  let difficulty = e.target.difficulty.value;\n\t  let complete = false;\n\t  let postObj =  await {item ,assignee,difficulty,complete}\n\t  habdlePost(postObj);\n\tsetTimeout(function refresh(){\n\n\t     window.location.reload(false);\n\t},500);\n\t  handleGet();\n  };\n\n  return (\n\n    <>\n      <Form onSubmit={_handleSubmit} >\n        <Form.Group controlId=\"formBasicEmail\" >\n           <h2>Add To Do Item</h2>\n             <Form.Label>To Do Item</Form.Label>\n           <Form.Control type=\"text\" name=\"text\" placeholder=\"Add To Do List Item\" />\n        </Form.Group>\n\n           <Form.Group controlId=\"formBasicPassword\">\n             <Form.Label>Assigned To</Form.Label>\n               <Form.Control type=\"text\" name=\"assignee\" placeholder=\"Assigned To\" />\n             </Form.Group>\n           <Form.Group controlId=\"formBasicRange\">\n                <Form.Label>Range</Form.Label>\n               <Form.Control defaultValue=\"1\" type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\" />\n           </Form.Group>\n              <Button variant=\"primary\" type=\"submit\" style={\n                 {\n           \t width: '100%'\n         \t       }\n               }>\n          Add Item\n  </Button>\n      </Form>\n    </>\n  );\n}\n\n\nexport default TodoForm;","import React from 'react';\nimport cookie from 'react-cookies';\nimport jwt from 'jsonwebtoken';\n\n\n\nconst API = process.env.REACT_APP_API || 'https://lab32-401.herokuapp.com';\n\nexport const LoginContext = React.createContext();\n\nclass LoginProvider extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loggedIn: false,\n            login: this.login,\n\t  logout: this.logout,\n\t  signup : this.signup,\n            user: {}\n        }\n    }\n\n    login = async(username, password) => {\n\n        try {\n            const results = await fetch( `${API}/signin`, {\n                method: 'POST',\n                mode: 'cors',\n                cache: 'no-cache',\n                headers: new Headers({\n                    'Authorization': `Basic ${btoa(`${username}:${password}`)}`\n                })\n            });\n\n            let res = await results.json();\n\n            this.validateToken(res.token);\n\n        } catch(err) {\n\t        alert('invalid user name or password');\n            console.log('you must sign up');\n\t  \n        }\n    }\n     signup = async body => {\n\tconst requestOptions = {\n\t\tmethod: 'POST',\n\t\tcache: 'no-cache',\n\t\tcredentials: 'same-origin',\n\t\theaders: {\n\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\tredirect: 'follow',\n\t\treferrerPolicy: 'no-referrer', \n\t\tbody: JSON.stringify(body)\n\t\t      };\n  \t\ttry{\n\t\t     const results = await fetch( `${API}/signup`, requestOptions);\n\t\t    let res = await results.json();\n         \n\t              this.validateToken(res.token);\n\t\t} catch(err) {\n\t\t   alert('username is already exists');\n                       console.log('somthing went wrong');\n\t\t}\t \n    }\n\n    logout = () => {\n        this.setLoginState(false, null, {});\n    }\n\n    validateToken = token => {\n\n        try {\n\n\tlet user = jwt.verify(token, process.env.REACT_APP_SECRET || 'supersecret');\n\tthis.setLoginState(true, token, user);\n\n        } catch (ex) {\n\n\tthis.logout();\n\talert('invalid user name or password');\n          console.log(\"token Validation error\")\n        }\n    }\n    \n    setLoginState = (loggedIn, token, user) => {\n\t    \n        cookie.save('auth', token);\n        this.setState({token, loggedIn, user});\n    }\n\n    componentDidMount() {\n        const cookieToken = cookie.load('auth');\n        const token = cookieToken || null;\n        this.validateToken(token);\n    }\n\n    render() {\n        return (\n            <LoginContext.Provider value={this.state}>\n                {this.props.children}\n            </LoginContext.Provider>\n        )\n    }\n}\n\nexport default LoginProvider;","const Show = props => {\n    return props.condition ? props.children : null\n}\n\nexport default Show;","import React from 'react';\nimport { LoginContext } from '../context/auth-context';\nimport Show from '../show/show';\n\nclass Auth extends React.Component {\n\n    static contextType = LoginContext;\n\n    render() {\n        let okToRender = false;\n\n        try {\n            okToRender = this.context.loggedIn && (\n                this.props.capability ? \n                    this.context.user.capabilities.includes(this.props.capability)\n                    : true\n            )\n            console.log(\"okToRender: \",okToRender)\n        } catch (e) {\n            console.warn('Not Authorized!');\n        }\n        return (\n            <Show condition={okToRender}>\n                {this.props.children}\n            </Show>\n        )\n    }\n}\n\nexport default Auth;","import React, { useState } from 'react';\n\nexport const SettingsContext = React.createContext();\n\nfunction SettingsProvider(props) {\n\n  const [itemsPerPage, setItemsPerPage] = useState(3);\n  const [show, setShow] = useState(false);\n  \n  const state = {\n    itemsPerPage,\n    changePageNumber: setItemsPerPage,\n    show,\n    setShow,\n  };\n\n  return (\n    <SettingsContext.Provider value={state}>\n      {props.children}\n    </SettingsContext.Provider>\n  );\n}\n\nexport default SettingsProvider;","import React, { useState, useContext } from 'react';\nimport { ListGroup ,Button , Toast,ToastHeader} from 'react-bootstrap';\nimport Auth from '../auth'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { SettingsContext } from '../../context/pagination'\nvar arr;\nfunction TodoList(props) {\n\n\n  const siteContext = useContext(SettingsContext);\n\n  const [btnIdx, setBtnIdx] = useState(0);\n\n  const handelPages = (pgNumber) => {\n    let newArr = props.list.filter(element => {\n      return !siteContext.show ? true : !element.complete;\n    });\n    let btns = Math.floor(newArr.length / pgNumber + (newArr.length % pgNumber > 0 ? 1 : 0));\n    arr = new Array(btns).fill(0);\n  };\n\n  handelPages(siteContext.itemsPerPage);\n\nconst btnHandler =(idx)=>{\n\tsetBtnIdx(idx)\n}\n\n  return (\n    <>\n      <ul>\n        {props.list.sort((a,b) =>  a.difficulty-b.difficulty )\n          .filter(val => !siteContext.show ? true : !val.complete)\n          .slice(btnIdx * siteContext.itemsPerPage, btnIdx * siteContext.itemsPerPage + siteContext.itemsPerPage)\n          .map((val, idx) => { \n\t\tlet status;\n\t\tlet complete;\n\t\t!val.complete ? status = 'danger' : status = 'success'; \n\t\t!val.complete ? complete='uncomplete'  : complete='completed' ;\n\t  \n\t         return <Toast key={val._id} >\n\t         <ToastHeader closeButton={false} >\n\t         <Auth capability=\"update\">\n\t\t  <Button className='complete' onClick={()=>props.updateStatus({val: val.item,\n\t\t\t\t\t  assignee: val.assignee,\n\t\t\t\t\t  difficulty: val.difficulty,\n\t\t\t\t\t  complete: !val.complete,},val._id)  }\n\t\t\t\t\t  variant={`${status}`}>{complete}</Button>{' '}\n\t\t  </Auth>\n\t\t <strong className=\"mr-auto assign\" >{val.assignee}</strong>\n\t\t <Auth capability=\"delete\">\n\t         <Button className='closedel' variant=\"outline-dark\"  onClick={()=>{ props.handleDelete(val._id) }}>X </Button>\n\t\t </Auth>\n\t         </ToastHeader>\n\t         <Toast.Body className='assign'>{val.item}</Toast.Body>\n\t         <small className='difficult'>Difficulty: {val.difficulty}</small>\n\t       </Toast>\n\t       \n\t      }\n          )\n        }\n\t  <div>\n\t    {arr.map((val, idx) => (<Button className='closedel'  key={idx} onClick={() => {btnHandler(idx)}}  >{idx}</Button>))}\n\t  </div>\n      </ul>\n\n    </>\n  )\n}\n\nexport default TodoList;","import React, { useState, useEffect } from 'react';\nimport { Navbar, Container } from 'react-bootstrap';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\n\nimport useForm from '../../hooks/custom-form'\nimport './todo.scss';\n\n\nlet once =0;\nfunction ToDo() {\n\n\tlet temp ;\n\tlet [toDoData, handleGet, habdlePost, habdleDelete, handelUpdate] = useForm(temp);\n\tlet data = [];\n\tObject.keys(toDoData).map((val, idx) => { \n\t\tdata.push(toDoData[val])\n\t})\n\tif(once === 0){\n\t\tconsole.log('im here');\n\t\thandleGet();\n\t\tonce++ ;\n\t         }\n\n  let [list, setList] = useState([]);\n  const [count, setCount] = useState(0);\n\n  const _addItem = (items) => {\n\n    items._id = Math.random();\n    items.complete = false;\n    items && setList([...list, items]);\n  };\n \n const _handleDelete = id =>{\n        console.log(id);\n\t habdleDelete(id);\n\tsetTimeout(function refresh(){\n\n\t\twindow.location.reload(false);\n\t},500);\n }\n const _updateStatus = (status,_id) =>{\n\n\thandelUpdate(status,_id);\n\thandleGet();\n }\n\n  useEffect(() => {\n\n    setCount(Object.keys(toDoData).filter(item => !toDoData[item].complete).length);\n    document.title = `${count} Uncompleted Tasks`;\n  }, [count, toDoData]);\n\n  return (\n\t  <>\n      <Container>\n        <Navbar bg=\"dark\" variant=\"dark\" style={{ marginTop: 2 + 'em' }}>\n          <Navbar.Brand >To DO Manager ({count}) </Navbar.Brand>\n        </Navbar>\n          <section className=\"todo\">\n\t<div className=\"form-border\">\n          <TodoForm handleSubmit={_addItem} />\n\t</div>\n\t<div className=\"list-group\">\n\t<TodoList list={data} handleDelete={_handleDelete} updateStatus={_updateStatus}  />\n\t</div>\n          </section>\n      </Container>\n    </>\n  );\n}\n\nexport default ToDo;","import React from 'react';\n\nimport { LoginContext } from '../context/auth-context';\nimport Show from '../show/show.js';\n\n\nclass Login extends React.Component {\n\t\n    static contextType = LoginContext;\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: ''\n        };\n    }\n\n    handleChange = e => {\n        this.setState({ [e.target.name] : e.target.value});\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.context.login(this.state.username, this.state.password);\n    }\n\n    render() {\n        return (\n            <>\n                <Show condition={this.context.loggedIn}>\n                    <button onClick={this.context.logout}>Logout</button>\n                </Show>\n                <Show condition={!this.context.loggedIn}>\n                    <form onSubmit={this.handleSubmit} >\n                        <input \n                            placeholder=\"userName\"\n                            name=\"username\"\n                            onChange={this.handleChange}\n                        />\n                        <input\n                            placeholder=\"password\"\n                            name=\"password\"\n                            onChange={this.handleChange}\n                        />\n                        <button>Login</button>\n                    </form>\n                </Show>\n            </>\n        )\n    }\n\n}\n\nexport default Login;","import React from 'react';\nimport { LoginContext } from '../context/auth-context';\nimport Show from '../show/show.js';\nimport {Button,Form} from 'react-bootstrap'\n\n\nclass Signup extends React.Component {\n\n    static contextType = LoginContext;\n\n    constructor(props) {\n\tsuper(props);\n\tthis.state = {\n\t    body: ''\n\t};\n      }\n\n\n    signUpSubmit = e =>{\n\te.preventDefault();\nlet password = e.target.Password.value;\nlet username = e.target.username.value;     \nlet role = e.target.role.value;  \nlet email = e.target.email.value;     \n\nlet body = {\n\tpassword,\n\tusername,\n\trole,\n\temail\t\n}\n\n      this.context.signup(body)\n\t}\n\n    render() {\n        return (\n\t<Show condition={!this.context.loggedIn}>\n\t<Form onSubmit={this.signUpSubmit}>\n  <Form.Row>\n    <Form.Group  controlId=\"formGridEmail\">\n      <Form.Label>Username</Form.Label>\n      <Form.Control type=\"username\" placeholder=\"Enter Username\" name='username'/>\n    </Form.Group>\n\n    <Form.Group  controlId=\"formGridPassword\">\n      <Form.Label>Password</Form.Label>\n      <Form.Control type=\"password\" placeholder=\"Password\" name='Password' />\n    </Form.Group>\n    <Form.Group  controlId=\"formGridPassword\">\n      <Form.Label>Email</Form.Label>\n      <Form.Control type=\"Email\" placeholder=\"Email\" name='email' />\n    </Form.Group>\n  </Form.Row>\n  <Form.Row>\n    <Form.Group  controlId=\"formGridState\">\n      <Form.Label>Role</Form.Label>\n      <Form.Control as=\"select\" defaultValue=\"Choose...\" name='role'>\n        <option >admin</option>\n        <option>user</option>\n        <option>guest</option>\n      </Form.Control>\n    </Form.Group>\n  </Form.Row>\n  <Button variant=\"primary\" type=\"submit\">\n    Submit\n  </Button>\n</Form>\n</Show>\n        )\n    }\n}\n\nexport default Signup;","import React from 'react';\nimport { Navbar } from 'react-bootstrap';\nimport ToDo from './components/todo/todo.js';\nimport  LoginContext from './context/auth-context';\nimport LogIn from './components/login'\nimport Auth from './components/auth'\nimport Signup from './components/signup'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SettingsContext from './context/pagination'\n\nclass App extends React.Component {\nrender(){\n\treturn (\n\t\t<SettingsContext>\n\t\t<LoginContext>\n\t\t<Navbar bg=\"primary\" variant=\"dark\">\n\t\t       <Navbar.Brand >Home</Navbar.Brand>\n\t\t <LogIn />\n\t\t    </Navbar>\n\t\t<Auth>\n\t\t<ToDo />\n\t   \t </Auth>\n\t\t <Signup />\n\t\t</LoginContext>\n\t\t</SettingsContext>\n\t      );\n}\n\n};\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nconst Main = () => {\n \n    return(\n\t<>\n\t<App />\n\t</>\n    ) \n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);"],"sourceRoot":""}